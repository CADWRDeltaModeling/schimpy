hotstart: 
    date: 2020-04-20
    hgrid_input_file: ./data_in/hgrid.gr3                     # hgrid needs to be in utm coordinates. 
    vgrid_input_file: ./data_in/vgrid.in.3d 
    vgrid_version: 5.8
    elevation:
        initializer: 
            patch_init: 
                smoothing: False
                regions_filename: ./data_in/elev.ic #the attribute 'region' in the shapefile needs to match with the region values below.     
                regions: 
                  - region: slr_or_below_bed
                    initializer: 
                        simple_trend: 
                            values: max(0.96,-z-0.01)
                  - region: ccfb
                    initializer:
                        simple_trend:
                            values: 0.525
                  - region: other
                    initializer: 
                        simple_trend:
                            values: 0.96
    tke:
        initializer: 
            hotstart_nc:
                data_source: ./data_in/hotstart_interpolation/hotstart_it=2688000.nc  
                source_hgrid: ./data_in/hotstart_interpolation/hgrid.gr3 
                source_vgrid: ./data_in/hotstart_interpolation/vgrid.in.3d  
                source_vgrid_version: 5.8
                distance_threshold: 10
                method: nearest            #method: interpolate vertically or assign a simple function (for flooded island case) in case hgrid   
    velocity_w:
        initializer: 
            hotstart_nc:
                data_source: ./data_in/hotstart_interpolation/hotstart_it=2688000.nc  
                source_hgrid: ./data_in/hotstart_interpolation/hgrid.gr3 
                source_vgrid: ./data_in/hotstart_interpolation/vgrid.in.3d
                source_vgrid_version: 5.8
                vinterp: True       # if vertical layers are the same between the two meshes, the default is not to perform vertical interpolation.    
    velocity_u:
        initializer: 
            hotstart_nc:
                data_source: ./data_in/hotstart_interpolation/hotstart_it=2688000.nc  
                source_hgrid: ./data_in/hotstart_interpolation/hgrid.gr3 
                source_vgrid: ./data_in/hotstart_interpolation/vgrid.in.3d     
                source_vgrid_version: 5.8
                distance_threshold: 10
                method: nearest            #method: interpolate vertically or assign a simple function (for flooded island case) in case hgrid    
    velocity_v:
        centering: edge # node, edge, elem, prism, benthic 
        initializer: 
            hotstart_nc:
                data_source: ./data_in/hotstart_interpolation/hotstart_it=2688000.nc  
                source_hgrid: ./data_in/hotstart_interpolation/hgrid.gr3 
                source_vgrid: ./data_in/hotstart_interpolation/vgrid.in.3d
                source_vgrid_version: 5.8
                distance_threshold: 10
                method: nearest            #method: interpolate vertically or assign a simple function (for flooded island case) in case hgrid
    salinity:
        initializer: 
            patch_init: 
                smoothing: False
                regions_filename: ./qgis/edb_polygon.shp #the attribute 'region' in the shapefile needs to match with the region values below.     
                regions: 
                  - region: edb
                    initializer: 
                        hotstart_nc:
                            data_source: ./data_in/hotstart_interpolation/hotstart_it=2688000.nc                
                            source_hgrid: ./data_in/hotstart_interpolation/hgrid.gr3   #if the hgrid is different
                            source_vgrid: ./data_in/hotstart_interpolation/vgrid.in.3d    #if the vgrid is different
                            source_vgrid_version: 5.8
                            vinterp: True
                  - region: other
                    initializer: 
                        hotstart_nc:
                            data_source: ./data_in/hotstart_interpolation/hotstart_it=2688000.nc                
                            source_hgrid: ./data_in/hotstart_interpolation/hgrid.gr3   #if the hgrid is different
                            source_vgrid: ./data_in/hotstart_interpolation/vgrid.in.3d    #if the vgrid is different
                            source_vgrid_version: 5.8
                            vinterp: False 
    temperature:
        initializer: 
            hotstart_nc:
                data_source: ./data_in/hotstart_interpolation/hotstart_it=2688000.nc
                #tracer_id: 0                #if different from existing setting. I think T is always 1 and S is always 2; otherwise infer a tracer_id based on existing tracer_id. 
                source_hgrid: ./data_in/hotstart_interpolation/hgrid.gr3   #if the hgrid is different
                source_vgrid: ./data_in/hotstart_interpolation/vgrid.in.3d    #if the vgrid is different
                source_vgrid_version: 5.8
                distance_threshold: 10
                method: nearest            #method: interpolate vertically or assign a simple function (for flooded island case) in case hgrid                             
    #elevation:
    #    centering: node2D  # node, edge, elem, prism, benthic 
    #    initializer: 
    #        hotstart_nc:
    #            data_source: ./data_in/hotstart_interpolation/hotstart_it=2688000.nc  
    #            hgrid: ./data_in/hotstart_interpolation/hgrid.gr3 
    #            vgrid: ./data_in/hotstart_interpolation/vgrid.in.3d  
    #            distance_threshold: 10
    #            method: np.maximum( -(z+0.1), 0.97)                